{
    "permissions": {
      "allow": [
        "Bash(go build:*)",
        "Bash(go test:*)",
        "Bash(go run:*)",
        "Bash(go mod tidy)",
        "Bash(go mod download)",
        "Bash(go fmt:*)",
        "Bash(goimports:*)",
        "Bash(go vet:*)",
        "Bash(go clean:*)",
        "Bash(go generate:*)",
        "Bash(golangci-lint:*)",
        "Bash(staticcheck:*)",
        "Bash(rm:*)",
        "Bash(curl:*)",
        "Bash(kill:*)",
        "Bash(ls:*)",
        "Bash(mkdir:*)",
        "Bash(rg:*)",
        "Bash(grep:*)",
        "Bash(git checkout:*)",
        "Bash(cp:*)",
        "mcp__ide__getDiagnostics",
        "Bash(find:*)",
        "Bash(git worktree:*)",
        "Bash(git branch:*)",
        "Bash(mv:*)",
        "Bash(git add:*)",
        "Bash(git status:*)",
        "Bash(git diff:*)",
        "Bash(git log:*)",
        "Bash(git push:*)",
        "Bash(git pull:*)",
        "Bash(make:*)",
        "Bash(ps:*)",
        "Bash(cat:*)",
        "Bash(head:*)",
        "Bash(tail:*)",
        "Bash(echo:*)",
        "Bash(pwd:*)",
        "Bash(which:*)",
        "Bash(wc:*)",
        "Bash(sort:*)",
        "Bash(uniq:*)",
        "*",
        "WebFetch(domain:docs.anthropic.com)",
        "WebFetch(domain:pkg.go.dev)",
        "WebFetch(domain:golang.org)",
        "WebFetch(domain:github.com)",
        "Bash(timeout:*)",
        "Bash(git commit:*)",
        "Bash(go get:*)",
        "Bash(go env:*)",
        "Bash(just:*)",
        "Bash(sed:*)",
        "Bash(go doc:*)",
        "Bash(test:*)",
        "WebFetch(domain:docs.fyne.io)",
        "Bash(xargs:*)",
        "Bash(/dev/null)",
        "Bash(touch:*)",
        "Bash(time:*)",
        "Bash(jq:*)"
      ],
      "deny": []
    },
    "environment": {},
    "aliases": {
      "test": "go test -v ./...",
      "build": "go build -o bin/gazelle cmd/gazelle/main.go",
      "lint": "golangci-lint run",
      "vet": "go vet ./...",
      "fmt": "go fmt ./...",
      "tidy": "go mod tidy",
      "clean": "go clean && rm -rf bin/"
    }
  }